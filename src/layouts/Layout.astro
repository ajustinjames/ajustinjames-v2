---
import "../styles/global.css";
import Header from "./Header.astro";
import Footer from "./Footer.astro";
interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
---

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
			return localStorage.getItem("theme");
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches
			? "dark"
			: "light";
	};
	const isDark = getThemePreference() === "dark";
	document.documentElement.classList[isDark ? "add" : "remove"]("dark");

	if (typeof localStorage !== "undefined") {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
		});
		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ["class"],
		});
	}

	window.toggleTheme = () => {
		document.documentElement.classList.toggle("dark");
	};
</script>

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<meta name="description" content={description} />
	</head>
	<body>
		<div class="min-h-screen flex flex-col">
			<Header />
			<main class="flex-1 w-full px-4 sm:px-6 lg:px-8 py-8">
				<div class="mx-auto w-full max-w-7xl">
					<slot />
				</div>
			</main>
			<Footer />
		</div>
	</body>
</html>
